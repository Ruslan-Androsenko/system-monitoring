// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: proto/monitoring.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitoringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EverySeconds uint32 `protobuf:"varint,1,opt,name=every_seconds,json=everySeconds,proto3" json:"every_seconds,omitempty"`
	AvgSeconds   uint32 `protobuf:"varint,2,opt,name=avg_seconds,json=avgSeconds,proto3" json:"avg_seconds,omitempty"`
	SudoPassword string `protobuf:"bytes,3,opt,name=sudo_password,json=sudoPassword,proto3" json:"sudo_password,omitempty"`
}

func (x *MonitoringRequest) Reset() {
	*x = MonitoringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitoringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringRequest) ProtoMessage() {}

func (x *MonitoringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringRequest.ProtoReflect.Descriptor instead.
func (*MonitoringRequest) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *MonitoringRequest) GetEverySeconds() uint32 {
	if x != nil {
		return x.EverySeconds
	}
	return 0
}

func (x *MonitoringRequest) GetAvgSeconds() uint32 {
	if x != nil {
		return x.AvgSeconds
	}
	return 0
}

func (x *MonitoringRequest) GetSudoPassword() string {
	if x != nil {
		return x.SudoPassword
	}
	return ""
}

type MonitoringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadAverage  float64              `protobuf:"fixed64,1,opt,name=load_average,json=loadAverage,proto3" json:"load_average,omitempty"`
	CpuLoad      *CpuLoad             `protobuf:"bytes,2,opt,name=cpu_load,json=cpuLoad,proto3" json:"cpu_load,omitempty"`
	DiskLoad     *DiskLoad            `protobuf:"bytes,3,opt,name=disk_load,json=diskLoad,proto3" json:"disk_load,omitempty"`
	DiskInfo     map[string]*DiskInfo `protobuf:"bytes,4,rep,name=disk_info,json=diskInfo,proto3" json:"disk_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NetworkStats *NetworkStats        `protobuf:"bytes,5,opt,name=network_stats,json=networkStats,proto3" json:"network_stats,omitempty"`
}

func (x *MonitoringResponse) Reset() {
	*x = MonitoringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitoringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringResponse) ProtoMessage() {}

func (x *MonitoringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringResponse.ProtoReflect.Descriptor instead.
func (*MonitoringResponse) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *MonitoringResponse) GetLoadAverage() float64 {
	if x != nil {
		return x.LoadAverage
	}
	return 0
}

func (x *MonitoringResponse) GetCpuLoad() *CpuLoad {
	if x != nil {
		return x.CpuLoad
	}
	return nil
}

func (x *MonitoringResponse) GetDiskLoad() *DiskLoad {
	if x != nil {
		return x.DiskLoad
	}
	return nil
}

func (x *MonitoringResponse) GetDiskInfo() map[string]*DiskInfo {
	if x != nil {
		return x.DiskInfo
	}
	return nil
}

func (x *MonitoringResponse) GetNetworkStats() *NetworkStats {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

type CpuLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMode   float64 `protobuf:"fixed64,1,opt,name=user_mode,json=userMode,proto3" json:"user_mode,omitempty"`
	SystemMode float64 `protobuf:"fixed64,2,opt,name=system_mode,json=systemMode,proto3" json:"system_mode,omitempty"`
	Idle       float64 `protobuf:"fixed64,3,opt,name=idle,proto3" json:"idle,omitempty"`
}

func (x *CpuLoad) Reset() {
	*x = CpuLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuLoad) ProtoMessage() {}

func (x *CpuLoad) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuLoad.ProtoReflect.Descriptor instead.
func (*CpuLoad) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *CpuLoad) GetUserMode() float64 {
	if x != nil {
		return x.UserMode
	}
	return 0
}

func (x *CpuLoad) GetSystemMode() float64 {
	if x != nil {
		return x.SystemMode
	}
	return 0
}

func (x *CpuLoad) GetIdle() float64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type DiskLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferPerSecond float64 `protobuf:"fixed64,1,opt,name=transfer_per_second,json=transferPerSecond,proto3" json:"transfer_per_second,omitempty"`
	ReadPerSecond     float64 `protobuf:"fixed64,2,opt,name=read_per_second,json=readPerSecond,proto3" json:"read_per_second,omitempty"`
	WritePerSecond    float64 `protobuf:"fixed64,3,opt,name=write_per_second,json=writePerSecond,proto3" json:"write_per_second,omitempty"`
}

func (x *DiskLoad) Reset() {
	*x = DiskLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskLoad) ProtoMessage() {}

func (x *DiskLoad) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskLoad.ProtoReflect.Descriptor instead.
func (*DiskLoad) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *DiskLoad) GetTransferPerSecond() float64 {
	if x != nil {
		return x.TransferPerSecond
	}
	return 0
}

func (x *DiskLoad) GetReadPerSecond() float64 {
	if x != nil {
		return x.ReadPerSecond
	}
	return 0
}

func (x *DiskLoad) GetWritePerSecond() float64 {
	if x != nil {
		return x.WritePerSecond
	}
	return 0
}

type DiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsageSize  float64 `protobuf:"fixed64,1,opt,name=usage_size,json=usageSize,proto3" json:"usage_size,omitempty"`
	UsageInode float64 `protobuf:"fixed64,2,opt,name=usage_inode,json=usageInode,proto3" json:"usage_inode,omitempty"`
}

func (x *DiskInfo) Reset() {
	*x = DiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskInfo) ProtoMessage() {}

func (x *DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskInfo.ProtoReflect.Descriptor instead.
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *DiskInfo) GetUsageSize() float64 {
	if x != nil {
		return x.UsageSize
	}
	return 0
}

func (x *DiskInfo) GetUsageInode() float64 {
	if x != nil {
		return x.UsageInode
	}
	return 0
}

type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerSocket     []*ListenerSocket   `protobuf:"bytes,1,rep,name=listener_socket,json=listenerSocket,proto3" json:"listener_socket,omitempty"`
	CounterConnections *CounterConnections `protobuf:"bytes,2,opt,name=counter_connections,json=counterConnections,proto3" json:"counter_connections,omitempty"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkStats) GetListenerSocket() []*ListenerSocket {
	if x != nil {
		return x.ListenerSocket
	}
	return nil
}

func (x *NetworkStats) GetCounterConnections() *CounterConnections {
	if x != nil {
		return x.CounterConnections
	}
	return nil
}

type ListenerSocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     uint32 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Pid      uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Command  string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port     uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ListenerSocket) Reset() {
	*x = ListenerSocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerSocket) ProtoMessage() {}

func (x *ListenerSocket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerSocket.ProtoReflect.Descriptor instead.
func (*ListenerSocket) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *ListenerSocket) GetUser() uint32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *ListenerSocket) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ListenerSocket) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ListenerSocket) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ListenerSocket) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type CounterConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tcp map[string]uint32 `protobuf:"bytes,1,rep,name=tcp,proto3" json:"tcp,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Udp map[string]uint32 `protobuf:"bytes,2,rep,name=udp,proto3" json:"udp,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CounterConnections) Reset() {
	*x = CounterConnections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_monitoring_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterConnections) ProtoMessage() {}

func (x *CounterConnections) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitoring_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterConnections.ProtoReflect.Descriptor instead.
func (*CounterConnections) Descriptor() ([]byte, []int) {
	return file_proto_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *CounterConnections) GetTcp() map[string]uint32 {
	if x != nil {
		return x.Tcp
	}
	return nil
}

func (x *CounterConnections) GetUdp() map[string]uint32 {
	if x != nil {
		return x.Udp
	}
	return nil
}

var File_proto_monitoring_proto protoreflect.FileDescriptor

var file_proto_monitoring_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x11, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x64, 0x6f, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x64, 0x6f,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc0, 0x02, 0x0a, 0x12, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x26, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x69, 0x73,
	0x6b, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x4c, 0x6f, 0x61, 0x64, 0x12,
	0x3e, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x1a, 0x46, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x07, 0x43,
	0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x73,
	0x6b, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x72, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x4a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x6f, 0x64, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x44,
	0x0a, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e,
	0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x54, 0x63, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x2e,
	0x0a, 0x03, 0x75, 0x64, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x55, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x75, 0x64, 0x70, 0x1a, 0x36,
	0x0a, 0x08, 0x54, 0x63, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x55, 0x64, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x4a,
	0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x36, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x2e,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_monitoring_proto_rawDescOnce sync.Once
	file_proto_monitoring_proto_rawDescData = file_proto_monitoring_proto_rawDesc
)

func file_proto_monitoring_proto_rawDescGZIP() []byte {
	file_proto_monitoring_proto_rawDescOnce.Do(func() {
		file_proto_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_monitoring_proto_rawDescData)
	})
	return file_proto_monitoring_proto_rawDescData
}

var file_proto_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_monitoring_proto_goTypes = []interface{}{
	(*MonitoringRequest)(nil),  // 0: MonitoringRequest
	(*MonitoringResponse)(nil), // 1: MonitoringResponse
	(*CpuLoad)(nil),            // 2: CpuLoad
	(*DiskLoad)(nil),           // 3: DiskLoad
	(*DiskInfo)(nil),           // 4: DiskInfo
	(*NetworkStats)(nil),       // 5: NetworkStats
	(*ListenerSocket)(nil),     // 6: ListenerSocket
	(*CounterConnections)(nil), // 7: CounterConnections
	nil,                        // 8: MonitoringResponse.DiskInfoEntry
	nil,                        // 9: CounterConnections.TcpEntry
	nil,                        // 10: CounterConnections.UdpEntry
}
var file_proto_monitoring_proto_depIdxs = []int32{
	2,  // 0: MonitoringResponse.cpu_load:type_name -> CpuLoad
	3,  // 1: MonitoringResponse.disk_load:type_name -> DiskLoad
	8,  // 2: MonitoringResponse.disk_info:type_name -> MonitoringResponse.DiskInfoEntry
	5,  // 3: MonitoringResponse.network_stats:type_name -> NetworkStats
	6,  // 4: NetworkStats.listener_socket:type_name -> ListenerSocket
	7,  // 5: NetworkStats.counter_connections:type_name -> CounterConnections
	9,  // 6: CounterConnections.tcp:type_name -> CounterConnections.TcpEntry
	10, // 7: CounterConnections.udp:type_name -> CounterConnections.UdpEntry
	4,  // 8: MonitoringResponse.DiskInfoEntry.value:type_name -> DiskInfo
	0,  // 9: SystemMonitoring.Metrics:input_type -> MonitoringRequest
	1,  // 10: SystemMonitoring.Metrics:output_type -> MonitoringResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_monitoring_proto_init() }
func file_proto_monitoring_proto_init() {
	if File_proto_monitoring_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_monitoring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitoringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitoringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerSocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_monitoring_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterConnections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_monitoring_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_monitoring_proto_goTypes,
		DependencyIndexes: file_proto_monitoring_proto_depIdxs,
		MessageInfos:      file_proto_monitoring_proto_msgTypes,
	}.Build()
	File_proto_monitoring_proto = out.File
	file_proto_monitoring_proto_rawDesc = nil
	file_proto_monitoring_proto_goTypes = nil
	file_proto_monitoring_proto_depIdxs = nil
}
